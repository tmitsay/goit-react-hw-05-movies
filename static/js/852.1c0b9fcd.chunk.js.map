{"version":3,"file":"static/js/852.1c0b9fcd.chunk.js","mappings":"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","sources":["components/API/api.js","pages/MoviesDetailsPage/moviesDetails.jsx"],"sourcesContent":["import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/'\nconst API_KEY = '61e5fdd47e53f1e747e2db8e87aa2226'\n\nexport const getTrending = async() => {\n    const { data } = await axios.get(`trending/movie/day?api_key=${API_KEY}`)\n    return data.results\n}\n\nexport const getSearchByKeyword = async (keyword) => {\n    const { data } = await axios.get(`search/movie?api_key=${API_KEY}`,\n        {\n            params: {\n                page: 1,\n                query: keyword,\n            }\n    })\n    return data.results\n}\n\n\nexport const getMovieDetails = async movieId => {\n    const {data} =await axios.get(`movies/${movieId}?api_key=${API_KEY}`)\n    return data\n}\n\nexport const getMovieReviews = async movieId => {\n    const {data} =await axios.get(`movies/${movieId}/reviews?api_key=${API_KEY}`)\n    return data.results\n}\n\nexport const getMovieCast = async movieId => {\n    const {data} =await axios.get(`movies/${movieId}/credits?api_key=${API_KEY}`)\n    return data.cast\n}","import { useLocation, Outlet, useParams, Link } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getMovieDetails } from 'components/API/api';\n// import css from './moviesDetails.module.css';\nimport { Loader } from 'components/Loader/loader';\n\nconst MoviesDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState('');\n  const location = useLocation();\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const addMovieDetails = async () => {\n      setIsLoading(true);\n\n      try {\n        const movieById = await getMovieDetails(movieId);\n        setMovie(movieById);\n      } catch (e) {\n        console.log(e);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    addMovieDetails();\n  }, [movieId]);\n\n  return (\n    <div>\n      <Link to={location.state?.from ?? '/'}>\n        <button type=\"button\">Go back</button>\n      </Link>\n\n      {isLoading && <Loader />}\n\n      <div>\n        <img\n          width=\"300px\"\n          alt={movie.original_title}\n          src={\n            movie.proster_path\n              ? `https://image.tmdb.org/t/p/w500/${movie.poster_path}`\n              : `http://ireland.apolllo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700`\n          }\n        />\n      </div>\n      <div>\n        <h2>{movie.original_title}</h2>\n        <p>Rating: {Math.round(movie.vote_average)}</p>\n        <h2>Overview</h2>\n        <p>{movie.overview}</p>\n        <h2>Genres</h2>\n        <ul>\n          {movie.genres?.map(genre => (\n            <li key={genre.id}>{genre.name}</li>\n          ))}\n        </ul>\n      </div>\n      <div>\n        <h3>Additional information</h3>\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </ul>\n      </div>\n      <Outlet />\n    </div>\n  );\n};\n\nexport default MoviesDetails;\n"],"names":["axios","API_KEY","getTrending","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$axios$get","data","_context","prev","next","concat","sent","abrupt","results","stop","apply","arguments","getSearchByKeyword","_ref2","_callee2","keyword","_yield$axios$get2","_context2","params","page","query","_x","getMovieDetails","_ref3","_callee3","movieId","_yield$axios$get3","_context3","_x2","getMovieReviews","_ref4","_callee4","_yield$axios$get4","_context4","_x3","getMovieCast","_ref5","_callee5","_yield$axios$get5","_context5","cast","_x4","_location$state$from","_location$state","_movie$genres","useParams","_useState","useState","_useState2","_slicedToArray","movie","setMovie","location","useLocation","_useState3","_useState4","isLoading","setIsLoading","useEffect","addMovieDetails","movieById","t0","console","log","finish","_jsxs","children","_jsx","Link","to","state","from","type","Loader","width","alt","original_title","src","proster_path","poster_path","Math","round","vote_average","overview","genres","map","genre","name","id","Outlet"],"sourceRoot":""}